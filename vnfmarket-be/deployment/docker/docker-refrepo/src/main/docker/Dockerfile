#
# This file was auto-generated by gen-all-dockerfiles.sh; do not modify manually.
#
# vnf-sdk-marketplace/target/Dockerfile
#

# 10-basebuild.txt

FROM centos:7

RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf
RUN sed -i 's|#baseurl=http://mirror.centos.org/centos|baseurl=http://mirrors.ocf.berkeley.edu/centos|' /etc/yum.repos.d/*.repo
RUN yum update -y

RUN yum install -y wget unzip socat java-1.8.0-openjdk-headless
RUN sed -i 's|#networkaddress.cache.ttl=-1|networkaddress.cache.ttl=10|' /usr/lib/jvm/jre/lib/security/java.security
ENV JAVA_HOME /usr/lib/jvm/jre

WORKDIR /service

# 20-mysq.txt
RUN yum install epel-release
RUN yum install nginx && \
    mkdir -p /etc/nginx/ssl
COPY nginx.conf /etc/nginx/nginx.conf
COPY certgen.sh .
CMD  chmod +x ./certgen.sh && \
     ./certgen.sh
COPY example.key example.cert /etc/nginx/ssl/
#CMD service nginx start 

# Set up mysql
RUN wget -q http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm && rpm -ivh mysql-community-release-el7-5.noarch.rpm && rm -f mysql-community-release-el7-5.noarch.rpm
RUN yum -y update
RUN yum -y install -y mysql-server
RUN mysql_install_db --user=mysql --datadir=/var/lib/mysql
COPY init-mysql.sh .

# 30-tomcat.txt - AUTOGENERATED, DO NOT MODIFY MANUALLY
# Set up tomcat
RUN wget -q http://mirrors.ocf.berkeley.edu/apache/tomcat/tomcat-8/v8.5.27/bin/apache-tomcat-8.5.27.tar.gz && tar --strip-components=1 -xf apache-tomcat-8.5.27.tar.gz && rm -f apache-tomcat-8.5.27.tar.gz && rm -rf webapps && mkdir -p webapps/ROOT
RUN echo 'export CATALINA_OPTS="$CATALINA_OPTS -Xms64m -Xmx256m -XX:MaxPermSize=64m"' > /service/bin/setenv.sh
ENV CATALINA_HOME /service

# 50-microservice.txt - AUTOGENERATED, DO NOT MODIFY MANUALLY


# Set up microservice
ADD ./STAGE  /service
RUN yum install -y gcc-c++ make &&  curl -sL https://rpm.nodesource.com/setup_6.x |  bash -
RUN yum install -y nodejs
RUN cd /service/webapps/onapui/vnfmarket &&  npm install phantomjs-prebuilt@2.1.14 --ignore-scripts &&  npm install

# https://nexus.onap.org/service/local/artifact/maven/redirect?r=snapshots&g=org.onap.vnfsdk.refrepo.marketplace&a=vnf-sdk-marketplace-deployment&e=zip&c=&v=LATEST
# RUN wget -q -O vnf-sdk-marketplace-1.0.0.zip "https://nexus.onap.org/service/local/repositories/snapshots/content/org/onap/vnfsdk/refrepo/vnf-sdk-marketplace-deployment/1.0.0/vnf-sdk-marketplace-deployment-1.0.0-20170515.020618-24.zip" && unzip -q -o -B vnf-sdk-marketplace-1.0.0.zip && rm -f vnf-sdk-marketplace-1.0.0.zip
EXPOSE 8702
EXPOSE 8703
# RUN echo ONAP vnf-sdk-marketplace 1.0.0 "https://nexus.onap.org/service/local/repositories/snapshots/content/org/openo/vnfsdk/refrepo/vnf-sdk-marketplace-deployment/1.0.0/vnf-sdk-marketplace-deployment-1.0.0-20170515.020618-24.zip" > ONAP_VERSION


# 90-entrypoint.txt
RUN cd /service
RUN yum clean all

COPY instance-config.sh .
COPY instance-init.sh .
COPY instance-run.sh .
COPY instance-workaround.sh .
COPY docker-entrypoint.sh .

# Set permissions
RUN find . -type d -exec chmod o-w {} \;
RUN find . -name "*.sh" -exec chmod +x {} \;

ENTRYPOINT /service/docker-entrypoint.sh

COPY LICENSE ./ONAP_LICENSE
